{
  "Resources": {
    "MyFirstBucketB8884501": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/MyFirstBucket/Resource"
      }
    },
    "MyFirstBucketPolicy3243DEFD": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "MyFirstBucketB8884501"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MyFirstBucketB8884501",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MyFirstBucketB8884501",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "CfOaiE3035D7D",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "MyFirstBucketB8884501",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/MyFirstBucket/Policy/Resource"
      }
    },
    "MyFirstBucketAutoDeleteObjectsCustomResourceC52FCF6E": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "MyFirstBucketB8884501"
        }
      },
      "DependsOn": [
        "MyFirstBucketPolicy3243DEFD"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/MyFirstBucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-312393305492-ap-northeast-1",
          "S3Key": "bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "MyFirstBucketB8884501"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
        "aws:asset:path": "asset.bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be",
        "aws:asset:property": "Code"
      }
    },
    "CfOaiE3035D7D": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Access identity for S3 bucket"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/CfOai/Resource"
      }
    },
    "CfDistributionCFDistribution711241B3": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "asai-app.my-theme.site"
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "CachedMethods": [
              "GET",
              "HEAD"
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "QueryString": false
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": {
                "Fn::GetAtt": [
                  "MyFirstBucketB8884501",
                  "RegionalDomainName"
                ]
              },
              "Id": "origin1",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "CfOaiE3035D7D"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "AcmCertificateArn": "arn:aws:acm:us-east-1:312393305492:certificate/bddf6609-0ef5-4680-888a-3b1752612f8a",
            "SslSupportMethod": "sni-only"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/CfDistribution/CFDistribution"
      }
    },
    "TableCD117FA1": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/Table/Resource"
      }
    },
    "NotificationMangaLambdaServiceRoleCE1BFDDE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/NotificationMangaLambda/ServiceRole/Resource"
      }
    },
    "NotificationMangaLambdaServiceRoleDefaultPolicy3D1AD8D2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TableCD117FA1",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": "ses:SendEmail",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "NotificationMangaLambdaServiceRoleDefaultPolicy3D1AD8D2",
        "Roles": [
          {
            "Ref": "NotificationMangaLambdaServiceRoleCE1BFDDE"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/NotificationMangaLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "NotificationMangaLambda93FC3EF1": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-312393305492-ap-northeast-1",
          "S3Key": "af7015c6cad5decba5a76e56fa710828c6757f6f35db74b1eeb8f446ffc6213f.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "NotificationMangaLambdaServiceRoleCE1BFDDE",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "ASAI_TABLE_NAME": {
              "Ref": "TableCD117FA1"
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 20
      },
      "DependsOn": [
        "NotificationMangaLambdaServiceRoleDefaultPolicy3D1AD8D2",
        "NotificationMangaLambdaServiceRoleCE1BFDDE"
      ],
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/NotificationMangaLambda/Resource",
        "aws:asset:path": "asset.af7015c6cad5decba5a76e56fa710828c6757f6f35db74b1eeb8f446ffc6213f",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "ServerlessRestApiCF2706A6": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "ServerlessRestApi"
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/ServerlessRestApi/Resource"
      }
    },
    "ServerlessRestApiDeployment3BF8AA917198e834f79264fef6d990fdea9ad68b": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ServerlessRestApiCF2706A6"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "ServerlessRestApiGET34A610DA"
      ],
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/ServerlessRestApi/Deployment/Resource"
      }
    },
    "ServerlessRestApiDeploymentStageprodA626EFFC": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "ServerlessRestApiCF2706A6"
        },
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeployment3BF8AA917198e834f79264fef6d990fdea9ad68b"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/ServerlessRestApi/DeploymentStage.prod/Resource"
      }
    },
    "ServerlessRestApiCustomDomain2781767F": {
      "Type": "AWS::ApiGateway::DomainName",
      "Properties": {
        "CertificateArn": "arn:aws:acm:us-east-1:312393305492:certificate/bddf6609-0ef5-4680-888a-3b1752612f8a",
        "DomainName": "asai-api.my-theme.site",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/ServerlessRestApi/CustomDomain/Resource"
      }
    },
    "ServerlessRestApiCustomDomainMapSampleBackendStackServerlessRestApiCA609621A9FFF5A1": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "Properties": {
        "DomainName": {
          "Ref": "ServerlessRestApiCustomDomain2781767F"
        },
        "RestApiId": {
          "Ref": "ServerlessRestApiCF2706A6"
        },
        "Stage": {
          "Ref": "ServerlessRestApiDeploymentStageprodA626EFFC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/ServerlessRestApi/CustomDomain/Map:--=>SampleBackendStackServerlessRestApiCA609621/Resource"
      }
    },
    "ServerlessRestApiGETApiPermissionSampleBackendStackServerlessRestApiCA609621GET822245AB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "NotificationMangaLambda93FC3EF1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-northeast-1:312393305492:",
              {
                "Ref": "ServerlessRestApiCF2706A6"
              },
              "/",
              {
                "Ref": "ServerlessRestApiDeploymentStageprodA626EFFC"
              },
              "/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/ServerlessRestApi/Default/GET/ApiPermission.SampleBackendStackServerlessRestApiCA609621.GET.."
      }
    },
    "ServerlessRestApiGETApiPermissionTestSampleBackendStackServerlessRestApiCA609621GETCE4437D0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "NotificationMangaLambda93FC3EF1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-northeast-1:312393305492:",
              {
                "Ref": "ServerlessRestApiCF2706A6"
              },
              "/test-invoke-stage/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/ServerlessRestApi/Default/GET/ApiPermission.Test.SampleBackendStackServerlessRestApiCA609621.GET.."
      }
    },
    "ServerlessRestApiGET34A610DA": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Fn::GetAtt": [
            "ServerlessRestApiCF2706A6",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ServerlessRestApiCF2706A6"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "NotificationMangaLambda93FC3EF1",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/ServerlessRestApi/Default/GET/Resource"
      }
    },
    "myCognitoA719C4AD": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_email",
              "Priority": 1
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false
        },
        "AliasAttributes": [
          "email",
          "preferred_username"
        ],
        "AutoVerifiedAttributes": [
          "email"
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Schema": [
          {
            "Mutable": true,
            "Name": "email",
            "Required": true
          },
          {
            "Mutable": true,
            "Name": "preferred_username",
            "Required": false
          }
        ],
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/myCognito/Resource"
      }
    },
    "myCognitomyClient7C6AA6B5": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "myCognitoA719C4AD"
        },
        "AllowedOAuthFlows": [
          "implicit",
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://example.com"
        ],
        "GenerateSecret": false,
        "SupportedIdentityProviders": [
          "COGNITO"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/myCognito/myClient/Resource"
      }
    },
    "route53PartsappARecord1DF869D1": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "asai-app.my-theme.site.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "CfDistributionCFDistribution711241B3",
              "DomainName"
            ]
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition"
              },
              "zoneId"
            ]
          }
        },
        "HostedZoneId": "Z02650671EO7KVTMWHGB5"
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/route53Parts/appARecord/Resource"
      }
    },
    "route53PartsappAaaaRecordB01AA048": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "asai-app.my-theme.site.",
        "Type": "AAAA",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "CfDistributionCFDistribution711241B3",
              "DomainName"
            ]
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition"
              },
              "zoneId"
            ]
          }
        },
        "HostedZoneId": "Z02650671EO7KVTMWHGB5"
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/route53Parts/appAaaaRecord/Resource"
      }
    },
    "route53PartsapiARecord6ED6D449": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "asai-api.my-theme.site.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "ServerlessRestApiCustomDomain2781767F",
              "DistributionDomainName"
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "ServerlessRestApiCustomDomain2781767F",
              "DistributionHostedZoneId"
            ]
          }
        },
        "HostedZoneId": "Z02650671EO7KVTMWHGB5"
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/route53Parts/apiARecord/Resource"
      }
    },
    "route53PartsapiAaaaRecord50BF7AED": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "asai-api.my-theme.site.",
        "Type": "AAAA",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "ServerlessRestApiCustomDomain2781767F",
              "DistributionDomainName"
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "ServerlessRestApiCustomDomain2781767F",
              "DistributionHostedZoneId"
            ]
          }
        },
        "HostedZoneId": "Z02650671EO7KVTMWHGB5"
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/route53Parts/apiAaaaRecord/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/21STW/bMAz9Lb0r2rKgu7sJCuzQNkg37BjQEusysURDHy0Cw/99+nCTtNiJj+QjxUfqh1zeyu838O4XSh8XPbVyfA6gjiKF9qNfyfEuqiMGsX6xM6pmyz2p0yU8+9W5A4+TUD1H/eLYBjk+OerINkqh97802kChFK8z5z5z/s84p/9iuyEfHLUxENtce+1PQp8sGNZJwG9oe8yEAibRg2k17C1rPHj5WMx9tKr0ITBy3HEtKPairKJJ+NUevMfgZZPN3FCOiXLuk+noDHlfpoGBOgj4DqfUHX1oBioPzHCDQ88nk1QWIRcvLb8ro1SwYQNkH8GU2JWXN7yF8PoAw0C2K3f4EkpvcXQKc1w8YHhlnWkVpetwZymwHP94dFvmPifP+AOse5qH/ByZhOMY8DZ9kGaHip2u8jJ6TitqAKB60yTW0Qc2H/PMe5jxp9TW8RtpdKLsOa/gWkgufIphiGWeWeYk8l3lwX97W/6Uy5Vc3hw80cLF9IMMyl21/wBdLdKC6QIAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "SampleBackendStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "ServerlessRestApiEndpoint5118C609": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ServerlessRestApiCF2706A6"
            },
            ".execute-api.ap-northeast-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "ServerlessRestApiDeploymentStageprodA626EFFC"
            },
            "/"
          ]
        ]
      }
    },
    "CloudFrontUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "CfDistributionCFDistribution711241B3",
                "DomainName"
              ]
            },
            "/"
          ]
        ]
      }
    }
  },
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2"
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}